%% -*- mode: erlang -*-
%% ex: ft=erlang
{sys,
 [ {lib_dirs, ["../lib"]}
 , {rel, "std_rel", git,
    % application start order
    [ kernel
    , stdlib
    , sasl
    %, public_key
    %, crypto
    %, ssl
    %, ssh
    %, lager
    %, estatsd
    ]}
 , {rel, "start_clean", "",
    [ kernel
    , stdlib
    ]}
 , {boot_rel,             "std_rel"}
 , {profile,              embedded}
 , {incl_cond,            exclude}   %explicitly include apps
 , {excl_archive_filters, [".*"]}    %do not archive built libs
 %% erlang/lib/
 , {app, asn1,            [{incl_cond, include}]}
 , {app, compiler,        [{incl_cond, include}]}
 , {app, crypto,          [{incl_cond, include}]}
 , {app, inets,           [{incl_cond, include}]}
 , {app, kernel,          [{incl_cond, include}]}
 , {app, mnesia,          [{incl_cond, include}]}
 , {app, public_key,      [{incl_cond, include}]}
 , {app, runtime_tools,   [{incl_cond, include}]}
 , {app, sasl,            [{incl_cond, include}]}
 , {app, ssh,             [{incl_cond, include}]}
 , {app, ssl,             [{incl_cond, include}]}
 , {app, stdlib,          [{incl_cond, include}]}
 , {app, syntax_tools,    [{incl_cond, include}]}
 %% lib/
 ]}.

{target_dir, "std_rel"}.

{overlay,
 [ {mkdir, "log"}
 , {copy, "files/erl",                     "\{\{erts_vsn\}\}/bin/erl"}
 , {copy, "files/nodetool",                "\{\{erts_vsn\}\}/bin/nodetool"}
 , {copy, "files/std_rel",                 "bin/std_rel"}
 , {copy, "files/std_rel.cmd",             "bin/std_rel.cmd"}
 , {copy, "files/start_erl.cmd",           "bin/start_erl.cmd"}
 , {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"}
 , {copy, "files/sys.config",              "releases/\{\{rel_vsn\}\}/sys.config"}
 , {copy, "files/vm.args",                 "releases/\{\{rel_vsn\}\}/vm.args"}
 ]}.
